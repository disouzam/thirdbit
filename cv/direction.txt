Hi Dan,

Thanks again for chatting on Friday—I appreciate you taking the time. I've attached a copy of my CV; the highlights are:

- I've built software for companies ranging from startups to IBM and HP. On the whole, I prefer smaller companies where I can see more of what's going on and can have more influence. More importantly, I prefer working with scientists, both because I understand their needs better and because I think science is cool :-)

- I co-founded and led a non-profit called Software Carpentry to teach basic programming and data science skills to graduate-level researchers. By the time I stepped down in 2017 we had taught hundreds of workshops to thousands people and trained instructors in almost 40 countries; according to https://carpentries.org/workshops/, those numbers have continued to grow steadily.

- I've written several books on programming, co-written a few others, and edited half a dozen more. The best known of these is probably "Beautiful Code" (O'Reilly, 2007), which won the Jolt Award the year it came out; a follow-on series called "The Architecture of Open Source Applications" (https://aosabook.org/) is open access and still gets 600-1200 hits a day.

- I co-founded and led a project called It Will Never Work in Theory (https://neverworkintheory.org/) that tried to build bridges between software engineering researchers and practitioners. I met interesting people and learned interesting things, but in the end we couldn't get programmers to pay attention to evidence about their work, and had just as little luck persuading researchers to study things practitioners cared about.

What ties all of this together is that I like explaining things: it pains me to see people spending days or weeks doing things that I could show them how to do in minutes or hours. I don't want to go back to institutional classroom teaching—marking exams isn't my cup of tea—but I would happily spend the next few years leveling up people's data science skills or mentoring junior programmers who know how to code but not how to work in a team. If you can think of any way I could do either or both of those for people in Toronto, I'd be very grateful.

Thanks,
Greg
